(function() {var type_impls = {
"rusty_mos":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-LinkList%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rusty_mos/kdef/queue.rs.html#39-43\">source</a><a href=\"#impl-Default-for-LinkList%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: Copy&gt; Default for <a class=\"struct\" href=\"rusty_mos/kdef/queue/struct.LinkList.html\" title=\"struct rusty_mos::kdef::queue::LinkList\">LinkList</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rusty_mos/kdef/queue.rs.html#40-42\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">default</a>() -&gt; Self</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a>Read more</a></div></details></div></details>","Default","rusty_mos::kern::pmap::PageList"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LinkList%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rusty_mos/kdef/queue.rs.html#45-107\">source</a><a href=\"#impl-LinkList%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: Copy&gt; <a class=\"struct\" href=\"rusty_mos/kdef/queue/struct.LinkList.html\" title=\"struct rusty_mos::kdef::queue::LinkList\">LinkList</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/rusty_mos/kdef/queue.rs.html#47-51\">source</a><h4 class=\"code-header\">pub const fn <a href=\"rusty_mos/kdef/queue/struct.LinkList.html#tymethod.new\" class=\"fn\">new</a>() -&gt; <a class=\"struct\" href=\"rusty_mos/kdef/queue/struct.LinkList.html\" title=\"struct rusty_mos::kdef::queue::LinkList\">LinkList</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Create an empty link list with its head null.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.empty\" class=\"method\"><a class=\"src rightside\" href=\"src/rusty_mos/kdef/queue.rs.html#54-56\">source</a><h4 class=\"code-header\">pub fn <a href=\"rusty_mos/kdef/queue/struct.LinkList.html#tymethod.empty\" class=\"fn\">empty</a>(&amp;self) -&gt; bool</h4></section></summary><div class=\"docblock\"><p>Judge whether this list is empty.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert_head\" class=\"method\"><a class=\"src rightside\" href=\"src/rusty_mos/kdef/queue.rs.html#62-70\">source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"rusty_mos/kdef/queue/struct.LinkList.html#tymethod.insert_head\" class=\"fn\">insert_head</a>(&amp;mut self, item: *mut <a class=\"struct\" href=\"rusty_mos/kdef/queue/struct.LinkNode.html\" title=\"struct rusty_mos::kdef::queue::LinkNode\">LinkNode</a>&lt;T&gt;)</h4></section></summary><div class=\"docblock\"><p>Insert a node to the head of the list</p>\n<h5 id=\"safety\"><a class=\"doc-anchor\" href=\"#safety\">§</a>Safety</h5>\n<p>The parameter <code>item</code> <em>SHALL</em> be mutably-visitable!</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pop_head\" class=\"method\"><a class=\"src rightside\" href=\"src/rusty_mos/kdef/queue.rs.html#78-92\">source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"rusty_mos/kdef/queue/struct.LinkList.html#tymethod.pop_head\" class=\"fn\">pop_head</a>(&amp;mut self) -&gt; Option&lt;*mut <a class=\"struct\" href=\"rusty_mos/kdef/queue/struct.LinkNode.html\" title=\"struct rusty_mos::kdef::queue::LinkNode\">LinkNode</a>&lt;T&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Get the first node of this list and removce it</p>\n<p>The return value will be <code>None</code> is the list is empty.</p>\n<h5 id=\"safety-1\"><a class=\"doc-anchor\" href=\"#safety-1\">§</a>Safety</h5>\n<p>All things in the list <em>SHALL</em> be valid!</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><a class=\"src rightside\" href=\"src/rusty_mos/kdef/queue.rs.html#98-106\">source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"rusty_mos/kdef/queue/struct.LinkList.html#tymethod.remove\" class=\"fn\">remove</a>(item: *mut <a class=\"struct\" href=\"rusty_mos/kdef/queue/struct.LinkNode.html\" title=\"struct rusty_mos::kdef::queue::LinkNode\">LinkNode</a>&lt;T&gt;)</h4></section></summary><div class=\"docblock\"><p>Remove a specified node from the list contains this node.</p>\n<h5 id=\"safety-2\"><a class=\"doc-anchor\" href=\"#safety-2\">§</a>Safety</h5>\n<p>The parameter <code>item</code> <em>SHALL</em> be mutably-visitable and <em>SHALL</em> be in an valid link list!</p>\n</div></details></div></details>",0,"rusty_mos::kern::pmap::PageList"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()